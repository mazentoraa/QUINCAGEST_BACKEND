"""
Django settings for lazercut project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
load_dotenv()
import os
import dj_database_url

DEBUG = os.environ.get('DEBUG', 'True') == 'True'
print(f"DEBUG: {DEBUG}")
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DATABASE_URL = os.environ.get('POSTGRES_URL', '')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o=)yd(t+$o)+g3$%k-#2dg7h&1m=f@*sc)untun2tn0mk*3d43'


ALLOWED_HOSTS = ["*", "akrambenghanem.pythonanywhere.com"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    'api',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
]

# Configuration pour Swagger
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': 'Ajouter un préfixe "Token " à votre token. Ex: Token abcdef123456'
        }
    },
    'USE_SESSION_AUTH': False,
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ALLOW_ALL_ORIGINS = True  # For quick testing only, change to specific origins for production

# Or use specific origins (safer for production):
# CORS_ALLOWED_ORIGINS = [
#     "https://metal-gest.vercel.app",
#     "http://localhost:3000",
# ]

# Allow credentials if you're using cookies/auth
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    "https://metal-gest.vercel.app"
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]
# Allow credentials if you're using cookies or authentication tokens
CORS_ALLOW_CREDENTIALS = True

# Optionally, specify which HTTP methods are allowed
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Optionally, specify which headers clients are allowed to send
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 5000,
}

# Allow frontend to access the API
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Adjust for your frontend URL TODO
]

ROOT_URLCONF = 'lazercut.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lazercut.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases



if DEBUG:
    print("DEBUG is True")
    # If DEBUG is True, use SQLite database
    DATABASES = {
        # 'default': {
        #     'ENGINE': 'django.db.backends.sqlite3',
        #     'NAME': BASE_DIR / 'db.sqlite3',
        # }
           'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'yuccainfo_db_3',
            'USER': 'yuccainfo_user',
            'PASSWORD': 'yuccainfo_pwd',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }
else:
    # If DEBUG is False, use PostgreSQL database
    DATABASE_URL = os.environ.get('DATABASE_URL')
    print(f"DATABASE_URL: {DATABASE_URL}")
    if not DATABASE_URL:
        raise ValueError("DATABASE_URL environment variable not set")

    DATABASES = {
        'default': dj_database_url.parse(DATABASE_URL)
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
