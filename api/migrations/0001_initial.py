# Generated by Django 5.2.1 on 2025-06-03 22:41

import api.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_entreprise', models.CharField(help_text="Nom de l'entreprise", max_length=255)),
                ('numero_fiscal', models.CharField(help_text='Fiscal registration number', max_length=255, unique=True)),
                ('adresse', models.CharField(blank=True, help_text='Entreprise address', max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Entreprise phone number', max_length=20, null=True, validators=[api.models.validate_phone])),
                ('email', models.EmailField(blank=True, help_text="Entreprise's email", max_length=254, null=True, validators=[api.models.validate_email])),
                ('site_web', models.URLField(blank=True, help_text="Site web de l'entreprise", null=True)),
                ('logo', models.ImageField(blank=True, help_text="Logo de l'entreprise", null=True, upload_to='entreprises/')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_client', models.CharField(help_text='Client name', max_length=255)),
                ('numero_fiscal', models.CharField(help_text='Fiscal registration number', max_length=255, unique=True)),
                ('adresse', models.CharField(blank=True, help_text='Client address', max_length=255, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Client phone number', max_length=20, null=True, validators=[api.models.validate_phone])),
                ('nom_responsable', models.CharField(blank=True, help_text="Manager or responsible person's name", max_length=255, null=True)),
                ('email', models.EmailField(blank=True, help_text="Client's email", max_length=254, null=True, validators=[api.models.validate_email])),
                ('email_responsable', models.EmailField(blank=True, help_text="Manager or responsible person's email", max_length=254, null=True, validators=[api.models.validate_email])),
                ('telephone_responsable', models.CharField(blank=True, help_text="Manager or responsible person's phone number", max_length=20, null=True, validators=[api.models.validate_phone])),
                ('autre_numero', models.CharField(blank=True, help_text='Other optional number', max_length=20, null=True, validators=[api.models.validate_phone])),
                ('informations_complementaires', models.TextField(blank=True, help_text='Additional information about the client', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the client was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the client was last updated')),
                ('nom_raison_sociale', models.CharField(blank=True, help_text='Nom de la raison sociale', max_length=255, null=True)),
            ],
            options={
                'ordering': ['nom_client'],
                'indexes': [models.Index(fields=['nom_client'], name='api_client_nom_cli_13517d_idx'), models.Index(fields=['numero_fiscal'], name='api_client_numero__695cd6_idx')],
            },
        ),
        migrations.CreateModel(
            name='BonRetour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_bon', models.CharField(help_text='Bon number', max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('completed', 'Complété'), ('cancelled', 'Annulée')], default='draft', help_text='Bon status', max_length=20)),
                ('date_reception', models.DateField(help_text='Reception date')),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Creation date')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Last update date')),
                ('date_retour', models.DateField(help_text='Return date')),
                ('date_emission', models.DateField(auto_now_add=True, help_text='Emission date')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='bons_retour', to='api.client')),
            ],
            options={
                'ordering': ['-date_retour', '-numero_bon'],
            },
        ),
        migrations.CreateModel(
            name='CommandeProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the command was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the command was last updated')),
                ('montant_ht', models.DecimalField(decimal_places=2, default=0, help_text='Montant hors taxes', max_digits=10)),
                ('taux_tva', models.DecimalField(decimal_places=2, default=19, help_text='Taux de TVA en pourcentage', max_digits=4)),
                ('montant_tva', models.DecimalField(decimal_places=2, default=0, help_text='Montant de la TVA', max_digits=10)),
                ('montant_ttc', models.DecimalField(decimal_places=2, default=0, help_text='Montant toutes taxes comprises', max_digits=10)),
                ('client', models.ForeignKey(blank=True, help_text='Client', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commandes_produits', to='api.client')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_devis', models.CharField(help_text='Quote number', max_length=50, unique=True)),
                ('date_emission', models.DateField(help_text='Quote issue date')),
                ('date_validite', models.DateField(help_text='Quote validity date (15 days after issue)')),
                ('statut', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyé'), ('accepted', 'Accepté'), ('rejected', 'Rejeté'), ('expired', 'Expiré'), ('converted', 'Converti en commande')], default='draft', help_text='Quote status', max_length=20)),
                ('tax_rate', models.IntegerField(default=20, help_text='Tax rate percentage')),
                ('montant_ht', models.FloatField(blank=True, help_text='Total amount excluding tax', null=True)),
                ('montant_tva', models.FloatField(blank=True, help_text='Tax amount', null=True)),
                ('montant_ttc', models.FloatField(blank=True, help_text='Total amount including tax', null=True)),
                ('remarques', models.TextField(default='Remarques :\n_ Validité du devis : 15 jours.\n_ Ce devis doit être accepté et signé pour valider la commande', help_text='Standard remarks on the quote')),
                ('notes', models.TextField(blank=True, help_text='Additional notes on the quote', null=True)),
                ('conditions_paiement', models.TextField(blank=True, help_text='Payment terms and conditions', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Creation date')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Last update date')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='devis', to='api.client')),
            ],
            options={
                'ordering': ['-date_emission', '-numero_devis'],
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_total', models.IntegerField(blank=True, help_text='Total amount', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the invoice was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the invoice was last updated')),
                ('commande', models.OneToOneField(help_text='Commande', on_delete=django.db.models.deletion.CASCADE, related_name='facture', to='api.commandeproduit')),
            ],
        ),
        migrations.CreateModel(
            name='FactureTravaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_facture', models.CharField(help_text='Invoice number', max_length=50, unique=True)),
                ('date_emission', models.DateField(help_text='Invoice generation date')),
                ('date_echeance', models.DateField(blank=True, help_text='Due date', null=True)),
                ('statut', models.CharField(choices=[('draft', 'Brouillon'), ('sent', 'Envoyée'), ('paid', 'Payée'), ('cancelled', 'Annulée')], default='draft', help_text='Invoice status', max_length=20)),
                ('tax_rate', models.IntegerField(default=20, help_text='Tax rate percentage')),
                ('montant_ht', models.FloatField(blank=True, help_text='Total amount excluding tax', null=True)),
                ('montant_tva', models.FloatField(blank=True, help_text='Tax amount', null=True)),
                ('montant_ttc', models.FloatField(blank=True, help_text='Total amount including tax', null=True)),
                ('date_generated', models.DateTimeField(auto_now_add=True, help_text='Date when the invoice was generated')),
                ('notes', models.TextField(blank=True, help_text='Additional notes on the invoice', null=True)),
                ('conditions_paiement', models.TextField(blank=True, help_text='Payment terms and conditions', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Creation date')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Last update date')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='factures', to='api.client')),
            ],
            options={
                'ordering': ['-date_emission', '-numero_facture'],
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_commande', models.CharField(help_text='Order number', max_length=50, unique=True)),
                ('date_commande', models.DateField(help_text='Order date')),
                ('date_livraison_prevue', models.DateField(blank=True, help_text='Expected delivery date', null=True)),
                ('date_livraison_reelle', models.DateField(blank=True, help_text='Actual delivery date', null=True)),
                ('statut', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('invoiced', 'Facturée')], default='pending', help_text='Order status', max_length=20)),
                ('tax_rate', models.IntegerField(default=20, help_text='Tax rate percentage')),
                ('montant_ht', models.FloatField(blank=True, help_text='Total amount excluding tax', null=True)),
                ('montant_tva', models.FloatField(blank=True, help_text='Tax amount', null=True)),
                ('montant_ttc', models.FloatField(blank=True, help_text='Total amount including tax', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes on the order', null=True)),
                ('conditions_paiement', models.TextField(blank=True, help_text='Payment terms and conditions', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Creation date')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Last update date')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='api.client')),
                ('devis', models.OneToOneField(blank=True, help_text='Associated quote', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commande', to='api.devis')),
                ('facture', models.OneToOneField(blank=True, help_text='Associated invoice', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commande_associee', to='api.facturetravaux')),
            ],
            options={
                'ordering': ['-date_commande', '-numero_commande'],
            },
        ),
        migrations.CreateModel(
            name='Cd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_commande', models.CharField(help_text='Order number', max_length=50, unique=True)),
                ('date_commande', models.DateField(help_text='Order date')),
                ('date_livraison_prevue', models.DateField(blank=True, help_text='Expected delivery date', null=True)),
                ('date_livraison_reelle', models.DateField(blank=True, help_text='Actual delivery date', null=True)),
                ('statut', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('invoiced', 'Facturée')], default='pending', help_text='Order status', max_length=20)),
                ('mode_paiement', models.CharField(choices=[('traite', 'Traite'), ('cash', 'Comptant'), ('mixte', 'Mixte'), ('virement', 'Virement')], default='cash', help_text='Payment method', max_length=20)),
                ('tax_rate', models.IntegerField(default=20, help_text='Tax rate percentage')),
                ('montant_ht', models.FloatField(blank=True, help_text='Total amount excluding tax', null=True)),
                ('timbre_fiscal', models.FloatField(blank=True, help_text='Fiscal stamp', null=True)),
                ('montant_tva', models.FloatField(blank=True, help_text='Tax amount', null=True)),
                ('montant_ttc', models.FloatField(blank=True, help_text='Total amount including tax', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes on the order', null=True)),
                ('conditions_paiement', models.TextField(blank=True, help_text='Payment terms and conditions', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Creation date')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Last update date')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='cd', to='api.client')),
                ('devis', models.OneToOneField(blank=True, help_text='Associated quote', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cd', to='api.devis')),
                ('facture', models.OneToOneField(blank=True, help_text='Associated invoice', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cd_associee', to='api.facturetravaux')),
            ],
            options={
                'ordering': ['-date_commande', '-numero_commande'],
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_bon', models.CharField(blank=True, help_text='Material reception number', max_length=50, null=True, unique=True)),
                ('type_matiere', models.CharField(choices=[('acier', 'Acier'), ('acier_inoxydable', 'Acier inoxydable'), ('aluminium', 'Aluminium'), ('laiton', 'Laiton'), ('cuivre', 'Cuivre'), ('acier_galvanise', 'Acier galvanisé'), ('autre', 'Autre')], default='autre', help_text='Material type', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Material description', null=True)),
                ('reception_date', models.DateField(blank=True, help_text='Date of material reception', null=True)),
                ('thickness', models.IntegerField(blank=True, help_text='Thickness of the material in mm', null=True)),
                ('length', models.IntegerField(blank=True, help_text='Length of the material in mm', null=True)),
                ('width', models.IntegerField(blank=True, help_text='Width of the material in mm', null=True)),
                ('surface', models.IntegerField(blank=True, help_text='Surface area of the material in m²', null=True)),
                ('prix_unitaire', models.FloatField(blank=True, help_text='Unit price of the material', null=True)),
                ('quantite', models.PositiveIntegerField(default=0, help_text='Quantity in stock')),
                ('remaining_quantity', models.PositiveIntegerField(default=0, help_text='Remaining quantity after work')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the material was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the material was last updated')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='FactureMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_bon', models.CharField(help_text='Bon number', max_length=50, unique=True)),
                ('date_reception', models.DateField(help_text='Reception date')),
                ('notes', models.TextField(blank=True, help_text='Additional notes', null=True)),
                ('tax_rate', models.IntegerField(default=20, help_text='Tax rate percentage')),
                ('montant_ht', models.FloatField(blank=True, help_text='Total amount excluding tax', null=True)),
                ('montant_tva', models.FloatField(blank=True, help_text='Tax amount', null=True)),
                ('montant_ttc', models.FloatField(blank=True, help_text='Total amount including tax', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Creation date')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Last update date')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='bons_reception', to='api.client')),
                ('matieres', models.ManyToManyField(help_text='Received materials', related_name='bons_reception', to='api.matiere')),
            ],
            options={
                'ordering': ['-date_reception'],
            },
        ),
        migrations.CreateModel(
            name='MatiereRetour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_retournee', models.PositiveIntegerField(default=1, help_text='Quantity of material returned')),
                ('bon_retour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matiere_retours', to='api.bonretour')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retours', to='api.matiere')),
            ],
        ),
        migrations.AddField(
            model_name='bonretour',
            name='matieres',
            field=models.ManyToManyField(help_text='Returned materials', related_name='bons_retour', through='api.MatiereRetour', to='api.matiere'),
        ),
        migrations.CreateModel(
            name='MatiereUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_utilisee', models.PositiveIntegerField(default=1, help_text='Quantity used in the work')),
                ('matiere', models.ForeignKey(help_text='Material', on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='api.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentComptant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NOT_PAID', 'Non payée'), ('PAID', 'Payée')], default='NOT_PAID', help_text='Payment status', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the payment was created')),
                ('montant', models.IntegerField(blank=True, help_text='Total amount', null=True)),
                ('facture', models.OneToOneField(help_text='Invoice', on_delete=django.db.models.deletion.CASCADE, to='api.facture')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='PlanTraite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_facture', models.CharField(blank=True, max_length=50, null=True)),
                ('nombre_traite', models.PositiveIntegerField()),
                ('date_emission', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('EN_COURS', 'En cours'), ('PAYEE', 'payée')], default='EN_COURS', max_length=20)),
                ('date_premier_echeance', models.DateField(blank=True, null=True)),
                ('periode', models.PositiveIntegerField(blank=True, null=True)),
                ('montant_total', models.FloatField(blank=True, null=True)),
                ('nom_raison_sociale', models.CharField(blank=True, max_length=255, null=True)),
                ('matricule_fiscal', models.CharField(blank=True, max_length=255, null=True)),
                ('mode_paiement', models.CharField(choices=[('traite', 'Traite'), ('cash', 'Comptant'), ('mixte', 'Mixte'), ('virement', 'Virement')], default='traite', max_length=20)),
                ('client', models.ForeignKey(blank=True, help_text='Client', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.client')),
                ('facture', models.OneToOneField(blank=True, help_text='Invoice', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.facturetravaux')),
            ],
            options={
                'ordering': ['-date_emission', 'date_premier_echeance'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_produit', models.CharField(help_text='Product name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Product description', null=True)),
                ('type_matiere', models.CharField(choices=[('acier', 'Acier'), ('acier_inoxydable', 'Acier inoxydable'), ('aluminium', 'Aluminium'), ('laiton', 'Laiton'), ('cuivre', 'Cuivre'), ('acier_galvanise', 'Acier galvanisé'), ('autre', 'Autre')], default='autre', help_text='Material type', max_length=50)),
                ('prix', models.FloatField(blank=True, help_text='Product price', null=True)),
                ('image', models.ImageField(blank=True, help_text='Product image', null=True, upload_to='produits/')),
                ('epaisseur', models.IntegerField(blank=True, help_text='Thickness of the product in mm', null=True)),
                ('longueur', models.IntegerField(blank=True, help_text='Length of the product in mm', null=True)),
                ('largeur', models.IntegerField(blank=True, help_text='Width of the product in mm', null=True)),
                ('surface', models.IntegerField(blank=True, help_text='Surface area of the product in m²', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the product was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the product was last updated')),
            ],
            options={
                'ordering': ['nom_produit'],
                'indexes': [models.Index(fields=['nom_produit'], name='api_produit_nom_pro_f2b30d_idx'), models.Index(fields=['prix'], name='api_produit_prix_14e5c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='PdC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1, help_text='Product quantity')),
                ('prix_unitaire', models.FloatField(blank=True, help_text='Unit price for this product', null=True)),
                ('timbre_fiscal', models.FloatField(blank=True, help_text='Fiscal stamp for this product entry', null=True)),
                ('remise_pourcentage', models.FloatField(default=0, help_text='Discount percentage')),
                ('prix_total', models.FloatField(blank=True, help_text='Total price for this product entry', null=True)),
                ('cd', models.ForeignKey(help_text='Order', on_delete=django.db.models.deletion.CASCADE, related_name='produit_commande', to='api.cd')),
                ('produit', models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='cd_produits', to='api.produit')),
            ],
        ),
        migrations.CreateModel(
            name='LineCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix', models.IntegerField(blank=True, help_text='Product price', null=True)),
                ('quantite', models.PositiveIntegerField(default=1, help_text='Quantité')),
                ('prix_total', models.IntegerField(blank=True, help_text='Total price', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the command was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the command was last updated')),
                ('commande', models.ForeignKey(help_text='Commande', on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='api.commandeproduit')),
                ('produit', models.OneToOneField(help_text='Produit', on_delete=django.db.models.deletion.CASCADE, related_name='ligne', to='api.produit')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddField(
            model_name='cd',
            name='produits',
            field=models.ManyToManyField(help_text='Products included in order', related_name='cd', through='api.PdC', to='api.produit'),
        ),
        migrations.CreateModel(
            name='ProduitCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1, help_text='Product quantity')),
                ('prix_unitaire', models.FloatField(blank=True, help_text='Unit price for this product', null=True)),
                ('remise_pourcentage', models.FloatField(default=0, help_text='Discount percentage')),
                ('prix_total', models.FloatField(blank=True, help_text='Total price for this product entry', null=True)),
                ('commande', models.ForeignKey(help_text='Order', on_delete=django.db.models.deletion.CASCADE, related_name='produit_commande', to='api.commande')),
                ('produit', models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='commande_produits', to='api.produit')),
            ],
        ),
        migrations.AddField(
            model_name='commande',
            name='produits',
            field=models.ManyToManyField(help_text='Products included in order', related_name='commandes', through='api.ProduitCommande', to='api.produit'),
        ),
        migrations.CreateModel(
            name='ProduitDevis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1, help_text='Product quantity')),
                ('prix_unitaire', models.FloatField(blank=True, help_text='Unit price for this product', null=True)),
                ('remise_pourcentage', models.FloatField(default=0, help_text='Discount percentage')),
                ('prix_total', models.FloatField(blank=True, help_text='Total price for this product entry', null=True)),
                ('devis', models.ForeignKey(help_text='Quote', on_delete=django.db.models.deletion.CASCADE, related_name='produit_devis', to='api.devis')),
                ('produit', models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='devis_produits', to='api.produit')),
            ],
        ),
        migrations.AddField(
            model_name='devis',
            name='produits',
            field=models.ManyToManyField(help_text='Products included in quote', related_name='devis', through='api.ProduitDevis', to='api.produit'),
        ),
        migrations.CreateModel(
            name='Traite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_echeance', models.DateField(auto_now_add=True, help_text='Invoice generation date')),
                ('status', models.CharField(choices=[('NON_PAYEE', 'Non payée'), ('PAYEE', 'Payée')], default='NON_PAYEE', help_text='Traite status', max_length=20)),
                ('montant', models.FloatField(blank=True, help_text='Total amount', null=True)),
                ('plan_traite', models.ForeignKey(help_text='Traite', on_delete=django.db.models.deletion.CASCADE, related_name='traites', to='api.plantraite')),
            ],
            options={
                'ordering': ['-date_echeance'],
            },
        ),
        migrations.CreateModel(
            name='Traveaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duree', models.PositiveIntegerField(help_text='Duration of the work in hours')),
                ('quantite', models.FloatField(default=1, help_text='Quantity of the product used for the work')),
                ('description', models.TextField(blank=True, help_text='Work description', null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date when the work was created')),
                ('derniere_mise_a_jour', models.DateTimeField(auto_now=True, help_text='Date when the work was last updated')),
                ('client', models.ForeignKey(help_text='Client', on_delete=django.db.models.deletion.CASCADE, related_name='travaux', to='api.client')),
                ('matieres', models.ManyToManyField(help_text='Materials used', related_name='travaux', through='api.MatiereUsage', to='api.matiere')),
                ('produit', models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='travaux', to='api.produit')),
            ],
        ),
        migrations.AddField(
            model_name='matiereusage',
            name='travaux',
            field=models.ForeignKey(help_text='Work', on_delete=django.db.models.deletion.CASCADE, related_name='matiere_usages', to='api.traveaux'),
        ),
        migrations.AddField(
            model_name='facturetravaux',
            name='travaux',
            field=models.ManyToManyField(help_text='Work items included in invoice', related_name='factures', to='api.traveaux'),
        ),
        migrations.AddIndex(
            model_name='commandeproduit',
            index=models.Index(fields=['client'], name='api_command_client__8c0844_idx'),
        ),
        migrations.AddIndex(
            model_name='commandeproduit',
            index=models.Index(fields=['date_creation'], name='api_command_date_cr_60c21f_idx'),
        ),
        migrations.AddIndex(
            model_name='facturematiere',
            index=models.Index(fields=['numero_bon'], name='api_facture_numero__400f14_idx'),
        ),
        migrations.AddIndex(
            model_name='facturematiere',
            index=models.Index(fields=['client'], name='api_facture_client__2fe0e6_idx'),
        ),
        migrations.AddIndex(
            model_name='facturematiere',
            index=models.Index(fields=['date_reception'], name='api_facture_date_re_62e534_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='matiereretour',
            unique_together={('bon_retour', 'matiere')},
        ),
        migrations.AddIndex(
            model_name='bonretour',
            index=models.Index(fields=['numero_bon'], name='api_bonreto_numero__f3a0ca_idx'),
        ),
        migrations.AddIndex(
            model_name='bonretour',
            index=models.Index(fields=['client'], name='api_bonreto_client__0774b2_idx'),
        ),
        migrations.AddIndex(
            model_name='bonretour',
            index=models.Index(fields=['date_retour'], name='api_bonreto_date_re_76c4e7_idx'),
        ),
        migrations.AddIndex(
            model_name='bonretour',
            index=models.Index(fields=['status'], name='api_bonreto_status_23c196_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentcomptant',
            index=models.Index(fields=['facture'], name='api_payment_facture_0d2921_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentcomptant',
            index=models.Index(fields=['date_creation'], name='api_payment_date_cr_820f8b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentcomptant',
            index=models.Index(fields=['status'], name='api_payment_status_39ed8a_idx'),
        ),
        migrations.AddIndex(
            model_name='plantraite',
            index=models.Index(fields=['facture'], name='api_plantra_facture_7d82de_idx'),
        ),
        migrations.AddIndex(
            model_name='plantraite',
            index=models.Index(fields=['date_emission'], name='api_plantra_date_em_3499d6_idx'),
        ),
        migrations.AddIndex(
            model_name='plantraite',
            index=models.Index(fields=['date_premier_echeance'], name='api_plantra_date_pr_3759b9_idx'),
        ),
        migrations.AddIndex(
            model_name='plantraite',
            index=models.Index(fields=['status'], name='api_plantra_status_5ca84c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pdc',
            unique_together={('cd', 'produit')},
        ),
        migrations.AddIndex(
            model_name='linecommande',
            index=models.Index(fields=['commande'], name='api_linecom_command_d5e1f1_idx'),
        ),
        migrations.AddIndex(
            model_name='linecommande',
            index=models.Index(fields=['produit'], name='api_linecom_produit_bb14f8_idx'),
        ),
        migrations.AddIndex(
            model_name='linecommande',
            index=models.Index(fields=['prix'], name='api_linecom_prix_904b9a_idx'),
        ),
        migrations.AddIndex(
            model_name='linecommande',
            index=models.Index(fields=['quantite'], name='api_linecom_quantit_583b64_idx'),
        ),
        migrations.AddIndex(
            model_name='linecommande',
            index=models.Index(fields=['prix_total'], name='api_linecom_prix_to_af2080_idx'),
        ),
        migrations.AddIndex(
            model_name='linecommande',
            index=models.Index(fields=['date_creation'], name='api_linecom_date_cr_5d741e_idx'),
        ),
        migrations.AddIndex(
            model_name='cd',
            index=models.Index(fields=['numero_commande'], name='api_cd_numero__a29f4a_idx'),
        ),
        migrations.AddIndex(
            model_name='cd',
            index=models.Index(fields=['client'], name='api_cd_client__a76831_idx'),
        ),
        migrations.AddIndex(
            model_name='cd',
            index=models.Index(fields=['date_commande'], name='api_cd_date_co_0f3a4c_idx'),
        ),
        migrations.AddIndex(
            model_name='cd',
            index=models.Index(fields=['statut'], name='api_cd_statut_9d82d0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='produitcommande',
            unique_together={('commande', 'produit')},
        ),
        migrations.AddIndex(
            model_name='commande',
            index=models.Index(fields=['numero_commande'], name='api_command_numero__5b6cb5_idx'),
        ),
        migrations.AddIndex(
            model_name='commande',
            index=models.Index(fields=['client'], name='api_command_client__764faf_idx'),
        ),
        migrations.AddIndex(
            model_name='commande',
            index=models.Index(fields=['date_commande'], name='api_command_date_co_06309f_idx'),
        ),
        migrations.AddIndex(
            model_name='commande',
            index=models.Index(fields=['statut'], name='api_command_statut_8922d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='produitdevis',
            unique_together={('devis', 'produit')},
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['numero_devis'], name='api_devis_numero__96fbf1_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['client'], name='api_devis_client__8f7099_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['date_emission'], name='api_devis_date_em_f363c2_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['statut'], name='api_devis_statut_89ceca_idx'),
        ),
        migrations.AddIndex(
            model_name='traite',
            index=models.Index(fields=['plan_traite'], name='api_traite_plan_tr_725ba9_idx'),
        ),
        migrations.AddIndex(
            model_name='traite',
            index=models.Index(fields=['date_echeance'], name='api_traite_date_ec_bc277b_idx'),
        ),
        migrations.AddIndex(
            model_name='traite',
            index=models.Index(fields=['status'], name='api_traite_status_b44c8d_idx'),
        ),
        migrations.AddIndex(
            model_name='traveaux',
            index=models.Index(fields=['client'], name='api_traveau_client__1deb58_idx'),
        ),
        migrations.AddIndex(
            model_name='traveaux',
            index=models.Index(fields=['produit'], name='api_traveau_produit_5f4d87_idx'),
        ),
        migrations.AddIndex(
            model_name='traveaux',
            index=models.Index(fields=['duree'], name='api_traveau_duree_cc4907_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='matiereusage',
            unique_together={('travaux', 'matiere')},
        ),
        migrations.AddIndex(
            model_name='facturetravaux',
            index=models.Index(fields=['numero_facture'], name='api_facture_numero__127469_idx'),
        ),
        migrations.AddIndex(
            model_name='facturetravaux',
            index=models.Index(fields=['client'], name='api_facture_client__af6848_idx'),
        ),
        migrations.AddIndex(
            model_name='facturetravaux',
            index=models.Index(fields=['date_emission'], name='api_facture_date_em_eca237_idx'),
        ),
        migrations.AddIndex(
            model_name='facturetravaux',
            index=models.Index(fields=['statut'], name='api_facture_statut_88c988_idx'),
        ),
    ]
